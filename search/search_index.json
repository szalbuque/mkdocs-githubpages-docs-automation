{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Introduction","text":""},{"location":"#problem-statement","title":"Problem Statement","text":"<p>You want to create a documentation portal that has a good design, but you want to focus only on the content, not on the design itself. You also want this documentation portal to be updated automatically whenever you commit something to a GitHub repository.</p>"},{"location":"#solution","title":"Solution","text":"<p>Use MkDocs to create the documentation portal website. Publish the website using GitHub Pages. Automate updates using GitHub Actions.</p>"},{"location":"#see-the-tutorial","title":"See the tutorial","text":"<p>Click Step-by-step to go directly to the tutorial.</p>"},{"location":"#learn-more","title":"Learn more","text":"<p>Click on References to learn more about these tools.</p>"},{"location":"#author","title":"Author","text":"<p>Silvia Z. Rocha Github: https://github.com/szalbuque</p>"},{"location":"references/","title":"References","text":"<p>Click on the links below to learn more:</p> <ul> <li>MkDocs official website</li> <li>Material for MkDocs</li> <li>GitHub Pages</li> <li>GitHub Actions</li> <li>James Willett Youtube channel</li> <li>Silvia Rocha\u00b4s repository</li> </ul> <p>Favicon from: A infraestrutura \u00edcones criados por juicy_fish - Flaticon</p>"},{"location":"step-by-step/","title":"Step-by-step","text":""},{"location":"step-by-step/#pre-requisites","title":"Pre-requisites","text":"<ul> <li>Python</li> <li>Github CLI</li> <li>VsCode</li> </ul>"},{"location":"step-by-step/#assumptions","title":"Assumptions","text":"<p>This tutorial assumes that:</p> <ul> <li>You are using a computer running Windows 10 or higher;</li> <li>You already have a GitHub profile. Click here to learn how to create a GitHub profile.</li> </ul>"},{"location":"step-by-step/#create-a-new-github-repository","title":"Create a new GitHub repository","text":"<ul> <li>Click here to learn how to create a new repository on GitHub.</li> <li>The repository I created for this project is: https://github.com/szalbuque/mkdocs-githubpages-docs-automation.git.</li> </ul>"},{"location":"step-by-step/#clone-the-github-repository-to-your-computer","title":"Clone the GitHub repository to your computer","text":"<ul> <li>In VSCode, click on <code>File &gt; Open folder</code> and select the folder to host the clone of the GitHub repository.</li> <li>Click on <code>Terminal &gt; New Terminal</code> to open a new terminal in VSCode.</li> <li>Use the <code>git clone</code> command to create a copy of the GitHub repository into the selected folder. </li> <li>See the example below. <pre><code>git clone https://github.com/szalbuque/mkdocs-githubpages-docs-automation.git\n</code></pre></li> <li>In this example I used my repository. You need to use the repository you created.</li> <li>Click here to learn how to clone a GitHub repository.</li> </ul>"},{"location":"step-by-step/#install-mkdocs","title":"Install MkDocs","text":"<ul> <li>MkDocs requires a recent version of Python and the Python package manager, pip, to be installed on your machine. See this page for information on how to meet these requirements .</li> </ul> <p>Warning</p> <p>If you have problems activating the Python Virtual Environment (venv), make sure you have the necessary permissions to run scripts. See this page to learn more about these permissions.</p>"},{"location":"step-by-step/#create-a-new-mkdocs-website","title":"Create a new MkDocs website","text":"<ul> <li>In VSCode, open the folder that contains the clone of the GitHub repository you created.</li> <li>Open a new terminal <code>(Terminal &gt; New Terminal)</code>.</li> <li> <p>Use the following commands to create and activate the Python Virtual Environment (venv): <pre><code>python -m venv venv\n.\\venv\\Scripts\\activate.ps1\n</code></pre></p> </li> <li> <p>Run the following command to create a new MkDocs website: <pre><code>mkdocs new .\n</code></pre></p> </li> <li>MkDocs will create two files:</li> </ul> Description File Contains the configurations for creating the website. .\\mkdocs.yml Contains a sample content. .\\docs\\index.md"},{"location":"step-by-step/#start-the-mkdocs-server","title":"Start the MkDocs server","text":"<ul> <li>Run the following command to start the local server for the newly created website: <pre><code>mkdocs serve\n</code></pre></li> <li>Open the address http://127.0.0.1:8000/ in your browser and see the default initial MkDocs website running.</li> </ul>"},{"location":"step-by-step/#add-the-material-theme-to-the-website","title":"Add the 'material' theme to the website","text":"<ul> <li>Open the mkdocs.yml file in VSCode.</li> <li>Add these two lines to the file and save it: <pre><code>theme:\n  name: material\n</code></pre></li> </ul> <p>Warning</p> <p>In YML files you must use the exact number of spaces before each line. You must read the MkDocs documentation to learn how to configure the mkdocs.yml file.</p> <ul> <li>Refresh the page http://127.0.0.1:8000/ in your browser and see what changes.</li> </ul>"},{"location":"step-by-step/#customize-mkdocs-features","title":"Customize MkDocs features","text":"<ul> <li>Add the following lines to the mkdocs.yml file, then save the file and refresh the browser to see the changes in the navigation bar and colors. <pre><code>site_name: MkDocs with GitHub Pages Tutorial\ntheme:\n  name: material\n  features:\n    - navigation.tabs\n    - navigation.sections\n    - toc.integrate\n    - navigation.top\n    - search.suggest\n    - search.highlight\n    - content.tabs.link\n    - content.code.annotation\n    - content.code.copy\n  language: en\n  palette:\n    - scheme: default\n      toggle:\n        icon: material/toggle-switch-off-outline \n        name: Switch to dark mode\n      primary: teal\n      accent: purple \n    - scheme: slate \n      toggle:\n        icon: material/toggle-switch\n        name: Switch to light mode    \n      primary: teal\n      accent: lime\n</code></pre></li> </ul>"},{"location":"step-by-step/#create-a-new-page-within-the-website","title":"Create a new page within the website","text":"<ul> <li>In the docs folder, create a new file named page2.md</li> <li>Add this line to the page2.md file and save it:</li> </ul> <pre><code> This is page 2\n</code></pre> <ul> <li>Refresh the browser and see the link to page2 created in the navigation bar.</li> <li>Click on the page2 link and see the new page you created.</li> </ul>"},{"location":"step-by-step/#publish-your-documentation-portal-to-github-pages","title":"Publish your documentation portal to GitHub Pages","text":""},{"location":"step-by-step/#prepare-the-local-repository","title":"Prepare the local repository","text":"<ul> <li>Create the folder .github inside your project\u00b4s root folder.</li> <li>Create the folder workflows inside the .github folder.</li> <li>Create the ci.yml file inside the  workflows folder.</li> <li>Copy the following content into the ci.yml file and save it.</li> </ul> <p>(1) See more...</p> <ol> <li>Click here to learn more about using GitHub Actions    to automate the deployment of MkDocs documentation website.</li> </ol> <pre><code>name: ci \non:\n  push:\n    branches:\n      - master \n      - main\npermissions:\n  contents: write\njobs:\n  deploy:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v3\n      - uses: actions/setup-python@v4\n        with:\n          python-version: 3.x\n      - uses: actions/cache@v2\n        with:\n          key: ${{ github.ref }}\n          path: .cache\n      - run: pip install mkdocs-material\n      - run: mkdocs gh-deploy --force\n</code></pre>"},{"location":"step-by-step/#update-the-github-repository","title":"Update the GitHub repository","text":"<ul> <li>Open a new terminal in VSCode.</li> <li>Use the following commands to push the files to the repository: <pre><code>git add .\ngit commit -m \"initial commit\"\ngit push origin main\n</code></pre></li> </ul>"},{"location":"step-by-step/#configure-github-to-create-a-github-page","title":"Configure GitHub to create a GitHub Page","text":"<ul> <li>Enter the repository for this project on the GitHub website.</li> <li>Click on the <code>Settings</code> option, on the navigation bar.</li> <li>Click on the <code>Pages</code> option, on the left side menu.</li> <li>Select the <code>Source</code> option <code>Deploy from a branch</code>.</li> <li>Under <code>Branch</code> subtitle, select the branch <code>gh-pages</code>.</li> <li>Select <code>/(root)</code> folder and click <code>Save</code>.</li> <li> <p>After you click on <code>Save</code>, the GitHub Actions will begin executing the workflow.</p> </li> <li> <p>To view the workflow, click on <code>Actions</code> in the navigation bar.</p> </li> <li>Click <code>pages-build-deployment</code> link to see the URL of the published site.</li> </ul>"}]}